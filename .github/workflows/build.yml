name: build

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install test framework
        run: make -C tests install
      - name: Test
        run: make -C tests
  build-with-make-cmake:
    name: Build with Make and CMake
    runs-on: ubuntu-latest
    needs: [unit-test]
    container:
      image: libmcu/ci:latest
    strategy:
      matrix:
        include:
          - target: blackpill_at32f403a
            repo: ArteryTek/framework-at32firmlib
            path: external/at32sdk
          - target: stm32_min_dev_blue
            repo: STMicroelectronics/STM32CubeF1
            path: external/STM32CubeF1
          - target: nrf52_blenano2
            repo: libmcu/nRF5_SDK_17.1.0_ddde560
            path: external/nRF5_SDK_17.1.0_ddde560
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Clone the dependancies
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.repo }}
          path: ${{ matrix.path }}
          ssh-key: ${{ secrets.SSH_KEY }}
      - name: Fix git safe.directory in container
        run: git config --global --add safe.directory /__w/firmware-project-layout/firmware-project-layout
      - name: Build with Make
        run: |
          ls
          make BOARD=${{ matrix.target }}
          make clean
      - name: Build with CMake
        run: |
          cmake -S . -B build -DBOARD=${{ matrix.target }} -DCMAKE_TOOLCHAIN_FILE=projects/arm-none-eabi-gcc.cmake
          cmake --build build
  build-for-esp32-with-esp-idf:
    name: Build for ESP32 with ESP-IDF
    runs-on: ubuntu-latest
    needs: [unit-test]
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build
        uses: docker://espressif/idf:release-v4.4
        with:
          args: /bin/bash -c "git config --global --add safe.directory /github/workspace && idf.py build"
  build-with-zephyr:
    name: Build with Zephyr
    strategy:
      matrix:
        target: [esp32, nrf52_blenano2, stm32_min_dev_blue]
    runs-on: ubuntu-latest
    needs: [unit-test]
    container:
      image: zephyrprojectrtos/ci:latest
    env:
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.15.1
    steps:
      - name: Prepare
        run: |
          west init .
          west update
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: ${{ github.event.repository.name }}
      - name: Build for ${{ matrix.target }}
        run: west build -b ${{ matrix.target }} ${{ github.event.repository.name }} -p always
