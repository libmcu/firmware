name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install test framework
        run: make -C tests install
  build-at32f403a-blackpill:
    name: AT32F403A BalckPill
    needs: [unit-test]
    runs-on: ubuntu-latest
    container:
      image: onkwon/yaos:0.8
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Clone the dependancies
        run: git clone https://github.com/ArteryTek/framework-at32firmlib.git external/at32sdk
      - name: Build
        run: make BOARD=blackpill_at32f403a
  build-esp32:
    name: ESP32
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build
        uses: docker://espressif/idf:release-v4.4
        with:
          args: /bin/bash -c "git config --global --add safe.directory /github/workspace && idf.py build"
  #build-nrf52-blenano2:
    #name: nRF52 Nano2
  build-stm32f1-bluepill:
    name: STM32F103 BluePill
    needs: [unit-test]
    runs-on: ubuntu-latest
    container:
      image: onkwon/yaos:0.8
    steps:
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Clone the dependancies
        run: git clone https://github.com/STMicroelectronics/STM32CubeF1.git external/STM32CubeF1
      - name: Build
        run: make BOARD=stm32_min_dev_blue
  build-zephyr:
    name: Zephyr
    needs: [unit-test]
    strategy:
      matrix:
        target: [esp32, nrf52_blenano2, stm32_min_dev_blue]
    runs-on: ubuntu-latest
    container:
      image: zephyrprojectrtos/ci:v0.24.2
    env:
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk-0.15.0
    steps:
      - name: Prepare
        run: |
          west init .
          west update
      - name: Clone
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          path: ${{ github.event.repository.name }}
      - name: Build for ${{ matrix.target }}
        run: west build -b ${{ matrix.target }} ${{ github.event.repository.name }} -p always
